version: 0.2
env:
  secrets-manager:
    LOGIN: local/sonar1:sqp_dbf9a3027faefb7948150fbe02af32992d4e7d70
    HOST: local/sonar1:https://sonarcloud.io
    Organization: local/sonar1:cheenepallipushpa
    Project: local/sonar1:sonarqube

phases:
  install:
    runtime-versions:
      nodejs: 16
    commands:
      - echo "Install phase ..."

  pre_build:
    commands:
      - echo "Pre build phase ..."
      - echo "LOGIN: $LOGIN"
      - echo "HOST: $HOST"
      - echo "Organization: $Organization"
      - echo "Project: $Project"
      - aws secretsmanager get-secret-value --secret-id $LOGIN
      - aws secretsmanager get-secret-value --secret-id $HOST
      - aws secretsmanager get-secret-value --secret-id $Organization
      - aws secretsmanager get-secret-value --secret-id $Project
      - apt-get update
      - apt-get install -y jq
      - wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip
      - unzip sonar-scanner-cli-4.7.0.2747-linux.zip
      - export PATH=$PATH:$PWD/sonar-scanner-4.7.0.2747-linux/bin/

  build:
    commands:
      - echo "Build phase ..."
      - set -e
      - sonar-scanner -Dsonar.login=${LOGIN} -Dsonar.host.url=${HOST} -Dsonar.projectKey=${Project} -Dsonar.organization=${Organization}
      - sleep 5
      - curl https://sonarcloud.io/api/qualitygates/project_status?projectKey=${Project} > result.json
      - cat result.json
      - if [ "$(jq -r '.projectStatus.status' result.json)" = "ERROR" ]; then exit 1; fi

  post_build:
    commands:
      - echo "Post build phase ..."
